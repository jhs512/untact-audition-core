<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.audictionary.dao.ApDao">
	<insert id="doJoin" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO ap 
		SET regDate = NOW(), 
		updateDate = NOW(),
		loginId = #{loginId},
		loginPw = #{loginPw},
		`name` = #{name},
		engName = #{engName},
		gender = #{gender},
		regNumber = #{regNumber},
		address = #{address},
		cellPhoneNo = #{cellPhoneNo},
		nickName = #{nickName}, 
        feet = #{feet}, 
        weight = #{weight}, 
        feature = #{feature}, 
        filmgraphy = #{filmgraphy}, 
        jobArea = #{jobArea}, 
        corp = #{corp},
		authKey = CONCAT("ap__authKey1__", UUID(), "__", RAND()) 
	</insert>
	
	<select id="getApByLoginId" resultType="Ap">
		SELECT *
		FROM ap
		WHERE loginId = #{loginId}
		AND delStatus != 1
	</select>
	
	<update id="doModify">
		UPDATE ap
			<set>
				<if test="isNeedToModify">
					updateDate = NOW(),
				</if>
				<if test="nickName != null and nickName.length > 0">
					nickName = #{nickName},
				</if>
				<if test="feet != null and feet.length > 0">
					feet = #{feet},
				</if>
				<if test="weight != null and weight.length > 0">
					weight = #{weight},
				</if>
				<if test="feature != null and feature.length > 0">
					feature = #{feature},
				</if>
				<if test="filmgraphy != null and filmgraphy.length > 0">
					filmgraphy = #{filmgraphy},
				</if>
				<if test="jobArea != null and jobArea.length > 0">
					jobArea = #{jobArea},
				</if>
				<if test="corp != null and corp.length > 0">
					corp = #{corp},
				</if>
			</set>
			WHERE id = #{id}
			AND delStatus != 1
	</update>
	
	<update id="doModifyPw">
		UPDATE ap
			<set>
				updateDate = NOW(),
				loginPw = #{loginPw}
			</set>
			WHERE loginId = #{loginId}
			AND delStatus != 1
	</update>
	
	<select id="getApByAuthKey" resultType="Ap">
		SELECT * FROM ap
		WHERE authKey = #{authKey}
		AND delStatus != 1
	</select>
	
	<select id="getApById" resultType="Ap">
		SELECT * FROM ap
		WHERE id = #{loginedMemberId}
		AND delStatus != 1
	</select>
	
	<select id="isAdmin" resultType="Ap">
		SELECT * FROM ap
		WHERE id = #{id}
		AND authLevel = 1
		AND delStatus != 1
	</select>
	
	<select id="doIdDupCheck" resultType="Ap">
		SELECT * FROM ap
		WHERE loginId = #{loginId}
		AND delStatus != 1
	</select>
	
	<update id="setAuthStatusValid">
		UPDATE `ap`
		<set>
			authStatus = 1,
		</set>
		WHERE authKey = #{authKey}
	</update>
	
	<select id="getListByLikedApplication" resultType="int">
		SELECT memberId FROM `like`
		WHERE relTypeCode = 'recruit'
		AND relId = #{id}
		AND memberTypeCode = 'ap'
	</select>
	
	<select id="getListByLikedAp" resultType="int">
		SELECT relId FROM `like`
		WHERE relTypeCode = 'application'
		AND memberTypeCode = 'pd'
	</select>
	
	<select id="getListByMemberIds" resultType="Ap">
		SELECT * FROM ap
		WHERE id = #{memberId}
	</select>
	
	<insert id="doLike" >
		INSERT INTO `like`
		SET regDate = NOW(), 
		updateDate = NOW(),
		relTypeCode = #{relTypeCode},
		relId = #{relId},
		memberTypeCode = #{memberTypeCode},
		memberId = #{memberId}
	</insert>
	
	<select id="isDupLike" resultType="int">
		SELECT COUNT(*) FROM `like`
		WHERE relId = #{relId}
		AND memberId = #{memberId}
	</select>
	
	<delete id="deleteLike">
		DELETE FROM `like`
		WHERE relId = #{relId}
		AND memberId = #{memberId}
	</delete>
	
	<select id="likeListsByMemberId" resultType="Integer">
		SELECT relId FROM `like`
		WHERE memberId = #{memberId}
	</select>
	
	<update id="doDeleteMemberById">
		UPDATE ap
		<set>
			delDate = NOW(),
			delStatus = 1
		</set>
		WHERE id = #{memberId}
	</update>
	
	<select id="findLoginId" resultType="Ap">
		SELECT * FROM ap
		WHERE name = #{name}
		AND regNumber = #{regNumber}
		AND delStatus != 1
	</select>
	
</mapper>